{
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 18,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-16T22:24:41.837Z",
    "end": "2022-09-16T22:25:37.883Z",
    "duration": 17890,
    "testsRegistered": 19,
    "passPercent": 94.73684210526316,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "06a11d66-4028-436d-b576-77177d86ad9a",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d120472-91c2-4e49-9970-56255c9589f8",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 731,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "64255847-0b28-4d2e-a446-8a6c7311418a",
              "parentUUID": "7d120472-91c2-4e49-9970-56255c9589f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login sem sucesso",
              "timedOut": null,
              "duration": 763,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarUsuarioFalso().then(res => {\n  cy.contractValidation(res, '1.login', 400);\n  _validaServerest.default.validarLoginSemSucesso(res);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.validarLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:400:32)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:196:32)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "e67bd01b-827a-4511-bf47-67082642fcb3",
              "parentUUID": "7d120472-91c2-4e49-9970-56255c9589f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64255847-0b28-4d2e-a446-8a6c7311418a"
          ],
          "failures": [
            "e67bd01b-827a-4511-bf47-67082642fcb3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1494,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "47591c89-c467-4f12-87c4-c073cf89e054",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c551733-11b8-459c-a256-1256271ed011",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 936,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, '7.get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "021a895c-c517-4fe3-a9c7-e03333249ea0",
              "parentUUID": "5c551733-11b8-459c-a256-1256271ed011",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "13556067-147f-4c47-aef8-29efd3873666",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 935,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "94fa96ce-116d-40fa-8ea5-9ceb6a6c17f9",
                  "parentUUID": "13556067-147f-4c47-aef8-29efd3873666",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve alterar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve alterar um produto com sucesso",
                  "timedOut": null,
                  "duration": 869,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.alterarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '11.put-produtos-by-id', 200);\n  _validaServerest.default.validarAlteracaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "3b85be2a-7b87-45c4-85e3-2cf972104bfd",
                  "parentUUID": "13556067-147f-4c47-aef8-29efd3873666",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 1199,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '10.delete-produtos-by-id', 200);\n  _validaServerest.default.validarExclusaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "da3d0e9e-a15b-4a55-9c1b-948578615c05",
                  "parentUUID": "13556067-147f-4c47-aef8-29efd3873666",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94fa96ce-116d-40fa-8ea5-9ceb6a6c17f9",
                "3b85be2a-7b87-45c4-85e3-2cf972104bfd",
                "da3d0e9e-a15b-4a55-9c1b-948578615c05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3003,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "021a895c-c517-4fe3-a9c7-e03333249ea0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "92ac26d5-70ca-4128-a925-2894547a2801",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "150854bd-d1f1-484c-bd9c-9df5a8d1c704",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "44ac4a07-5fd0-42cb-bffe-670a8ac4963f",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve adicionar um produto ao carrinho",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve adicionar um produto ao carrinho",
                  "timedOut": null,
                  "duration": 1784,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho();\ncy.get('@produtoCarrinho').then(produto => {\n  _serverest.default.adicionarProdutoAoCarrinho(produto).then(res => {\n    cy.contractValidation(res, '14.post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinhoComSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "8639cf2a-7f2c-44d7-b40a-c084137f83f3",
                  "parentUUID": "44ac4a07-5fd0-42cb-bffe-670a8ac4963f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve buscar carrinho cadastrado",
                  "timedOut": null,
                  "duration": 1002,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinho().then(res => {\n  cy.contractValidation(res, '12.get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinho(res);\n});",
                  "err": {},
                  "uuid": "ee2b45fe-6b7c-4376-b80c-34af93de82aa",
                  "parentUUID": "44ac4a07-5fd0-42cb-bffe-670a8ac4963f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir um carrinho ao concluir compra",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve excluir um carrinho ao concluir compra",
                  "timedOut": null,
                  "duration": 940,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, '15.delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarExclusaoDeCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "b831b708-9ccd-4eb1-931a-5c385246c05d",
                  "parentUUID": "44ac4a07-5fd0-42cb-bffe-670a8ac4963f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8639cf2a-7f2c-44d7-b40a-c084137f83f3",
                "ee2b45fe-6b7c-4376-b80c-34af93de82aa",
                "b831b708-9ccd-4eb1-931a-5c385246c05d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3726,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7ba32e1-679b-4cdd-a0f4-28f9ce9bbb7d",
      "title": "",
      "fullFile": "cypress/integration/5.fluxoDeCompra.spec.js",
      "file": "cypress/integration/5.fluxoDeCompra.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f13941a9-face-4041-83cc-60dd58136c8e",
          "title": "Casos de teste sobre o fluxo de compra da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve postar um novo usuario com sucesso",
              "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Deve postar um novo usuario com sucesso",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarUsuarioValido().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "71459971-d037-43b2-9db3-a952b1b9a609",
              "parentUUID": "f13941a9-face-4041-83cc-60dd58136c8e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "1974f15e-556b-4a9d-860c-b73553dc66ec",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve buscar todos os produtos cadastrados",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve buscar todos os produtos cadastrados",
                  "timedOut": null,
                  "duration": 1441,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, '7.get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
                  "err": {},
                  "uuid": "a1a21037-15c9-4636-be40-9e6b96fd1d40",
                  "parentUUID": "1974f15e-556b-4a9d-860c-b73553dc66ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve adicionar um produto ao carrinho",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve adicionar um produto ao carrinho",
                  "timedOut": null,
                  "duration": 1145,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho();\ncy.get('@produtoCarrinho').then(produto => {\n  _serverest.default.adicionarProdutoAoCarrinho(produto).then(res => {\n    cy.contractValidation(res, '14.post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinhoComSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "a54d779a-0a3f-4451-a48b-9f3ed78b147d",
                  "parentUUID": "1974f15e-556b-4a9d-860c-b73553dc66ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho cadastrado",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve buscar carrinho cadastrado",
                  "timedOut": null,
                  "duration": 1302,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinho().then(res => {\n  cy.contractValidation(res, '12.get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinho(res);\n});",
                  "err": {},
                  "uuid": "ca9545ba-8cdb-4025-83f2-ac2618ddf4db",
                  "parentUUID": "1974f15e-556b-4a9d-860c-b73553dc66ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir um carrinho ao concluir compra",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve excluir um carrinho ao concluir compra",
                  "timedOut": null,
                  "duration": 1098,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, '15.delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarExclusaoDeCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "c24605ce-ea0b-431a-b756-0d1490fe2b1a",
                  "parentUUID": "1974f15e-556b-4a9d-860c-b73553dc66ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1a21037-15c9-4636-be40-9e6b96fd1d40",
                "a54d779a-0a3f-4451-a48b-9f3ed78b147d",
                "ca9545ba-8cdb-4025-83f2-ac2618ddf4db",
                "c24605ce-ea0b-431a-b756-0d1490fe2b1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4986,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "71459971-d037-43b2-9db3-a952b1b9a609"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aee409ab-df0a-4543-84a1-b42974e1414e",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2c74231-d492-4b99-a693-1118afdf9014",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 1171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, '2.get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "465dbe04-d8f9-4b30-b332-daab20550a2c",
              "parentUUID": "c2c74231-d492-4b99-a693-1118afdf9014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário admnistrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário admnistrador existente",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 400);\n  expect(res.status).to.equal(400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "43408ed2-1921-4738-9db4-9a6853439813",
              "parentUUID": "c2c74231-d492-4b99-a693-1118afdf9014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 640,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "0fc2539b-2546-4cbe-99cd-1733d228b078",
              "parentUUID": "c2c74231-d492-4b99-a693-1118afdf9014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 677,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let limite = res.body.quantidade - 1;\n  cy.log(limite);\n  let inteiro = _factory.default.gerarInteiroAleatorio(limite);\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "7c612597-7ac1-4925-97be-7970b89357bc",
              "parentUUID": "c2c74231-d492-4b99-a693-1118afdf9014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuario de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuario de um arquivo json",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "00915864-6c2d-465a-8a7a-0a041a043ecf",
              "parentUUID": "c2c74231-d492-4b99-a693-1118afdf9014",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "465dbe04-d8f9-4b30-b332-daab20550a2c",
            "43408ed2-1921-4738-9db4-9a6853439813",
            "0fc2539b-2546-4cbe-99cd-1733d228b078",
            "7c612597-7ac1-4925-97be-7970b89357bc",
            "00915864-6c2d-465a-8a7a-0a041a043ecf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}