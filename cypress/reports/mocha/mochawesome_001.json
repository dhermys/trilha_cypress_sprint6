{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-28T01:48:17.939Z",
    "end": "2022-09-28T01:48:20.512Z",
    "duration": 2573,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1b44ec78-2c02-47bd-a74a-4b8decb1b2b8",
      "title": "",
      "fullFile": "cypress/integration/2.cadastroUsuarios.spec.js",
      "file": "cypress/integration/2.cadastroUsuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9479f31d-b812-456c-b877-571321b01569",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CT18 - Validar rota de lista de usuários",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT18 - Validar rota de lista de usuários",
              "timedOut": null,
              "duration": 711,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, '2.get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "04bbc1b5-71f2-421b-8b95-9cd497f5568b",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT20 - Validar rota de busca de usuário por id com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT20 - Validar rota de busca de usuário por id com sucesso",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorId().then(res => {\n  cy.contractValidation(res, '3.get-usuarios-by-id', 200);\n  _validaServerest.default.validarBuscaDeUsuariosPorId(res);\n});",
              "err": {},
              "uuid": "48d9e26f-d54a-4797-97d9-ad7b3e5300c6",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT23 - Validar rota de criação de usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT23 - Validar rota de criação de usuário com sucesso",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarUsuarioValido().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "5f11a04f-004f-4948-83c1-533cd4aadaa9",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT29 - Validar rota de não criação de usuário com email já cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT29 - Validar rota de não criação de usuário com email já cadastrado",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 400);\n  _validaServerest.default.validarCadastroDeUsuarioSemSucesso(res);\n});",
              "err": {},
              "uuid": "2f9e2dc0-9de7-4a89-bb8e-91fabadb947a",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT30 - Validar rota de alteração de usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT30 - Validar rota de alteração de usuário com sucesso",
              "timedOut": null,
              "duration": 275,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.alterarUsuarioCadastrado().then(res => {\n  cy.contractValidation(res, '6.put-usuarios-by-id', 200);\n  _validaServerest.default.validarAlteracaoDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "823d0f1b-053e-43e1-b703-d277ec37527f",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT31 - Validar rota de criação de usuário ao tentar alterar usuário inexistente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT31 - Validar rota de criação de usuário ao tentar alterar usuário inexistente",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioAoTentarAlterar().then(res => {\n  cy.contractValidation(res, '6.put-usuarios-by-id', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "0b6ba6ca-3a6d-4969-90e2-1c1c31862a86",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT38 - Validar rota de exclusão de usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CT38 - Validar rota de exclusão de usuário com sucesso",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.deletarUsuarioCadastrado().then(res => {\n  cy.contractValidation(res, '5.delete-usuarios-by-id', 200);\n  _validaServerest.default.validarExclusaoDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "6c80f33a-d477-4daf-9c6b-60143400ff0f",
              "parentUUID": "9479f31d-b812-456c-b877-571321b01569",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04bbc1b5-71f2-421b-8b95-9cd497f5568b",
            "48d9e26f-d54a-4797-97d9-ad7b3e5300c6",
            "5f11a04f-004f-4948-83c1-533cd4aadaa9",
            "2f9e2dc0-9de7-4a89-bb8e-91fabadb947a",
            "823d0f1b-053e-43e1-b703-d277ec37527f",
            "0b6ba6ca-3a6d-4969-90e2-1c1c31862a86",
            "6c80f33a-d477-4daf-9c6b-60143400ff0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}